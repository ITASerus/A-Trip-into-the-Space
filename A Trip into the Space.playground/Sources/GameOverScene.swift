//
//  GameOverScene.swift
//  game_wwdc2018
//
//  Created by Ernesto De Crecchio on 28/03/18.
//  Copyright © 2018 ernesto-de-crecchio. All rights reserved.
//

import SpriteKit

class GameOverScene: SKScene {
  
  let typeOfGameOver: Int
  //Type:
  // 1 - Win (arrived on Mard)
  // 2 - Game Over (Oxigen Finisced)
  // 3 - Game Over (Out of trajectory)
  // 4 - Game Over (Explosion)
  init(size: CGSize, type: Int) {
    self.typeOfGameOver = type
    super.init(size: size)
  }
  
  required init(coder aDecoder: NSCoder) {
    fatalError("init(coder:) has not been implemented")
  }
  
  override func didMove(to view: SKView) {
    var background: SKSpriteNode?
    background?.zPosition = Z.background
    
    let winOrLoseLabel = SKLabelNode(fontNamed: "DIN Condensed")
    winOrLoseLabel.fontColor = SKColor.white
    winOrLoseLabel.fontSize = 84
    winOrLoseLabel.position = CGPoint(x: size.width/2, y: size.height - winOrLoseLabel.fontSize)
    winOrLoseLabel.zPosition = 10

    let textLabel = SKLabelNode(fontNamed: "DIN Condensed")
    textLabel.fontColor = SKColor.white
    textLabel.horizontalAlignmentMode = .center
    textLabel.verticalAlignmentMode = .top
    textLabel.fontSize = 22
    textLabel.numberOfLines = 0
    textLabel.preferredMaxLayoutWidth = 312
    textLabel.position = CGPoint(x: size.width/2, y: winOrLoseLabel.position.y - 23)
    textLabel.zPosition = 10
    
    switch typeOfGameOver {
    case 1: //Win
      winOrLoseLabel.text = "YOU WIN!"
      textLabel.text = "You did it! You reached Mars! But… this is only a game. When humans will reach Mars? NASA is working hard to send humans to the Red Planet in the 2030s!\n\nIn the meantime, humans sent rovers and other technologies to explore the planet and we understood a lot of incredible things but maybe the most important thing is that on Mars there is a lot of ice (not water because the atmospheric pressure is not enough) so... maybe the first human colony will be on the Red Planet?"
      background = SKSpriteNode(imageNamed: "WinBackground")
      break
    case 2: //Death by out of oxigen
      winOrLoseLabel.text = "GAME OVER!"
      textLabel.text = "Your oxygen is finished (and therefore your trip as well)!\n\nOxygen is a fundamental resource for space travel and astronauts obviously need it to survive in space for a long time.\nThe oxygen that is breathed by the astronauts is generated by a special device called OGS (Oxygen Generator Sysem) that takes care of generating oxygen from the water through the electrolysis process.\nIn the event of a malfunction, the astronauts have other ways to supply themselves with oxygen such as refueling from the Earth and the so-called 'oxygen candles' (in extreme cases)."
      background = SKSpriteNode(imageNamed: "OutOfOxigenBackground")
      break
    case 3: //Death by out of trajectory
      winOrLoseLabel.text = "GAME OVER!"
      textLabel.text = "Houston, we have a problem! You came out of the trajectory.\n\nBefore each launch, scientists calculate the trajectory that will follow the body launched down to the smallest details. Usially there are no problems under this point of view unless some malfunction occurs causing an exit form the programmed trajectory. These problems often occur when returning to Earth's atmosphere: the record is probably of the Soyuz TMA-1 mission, which landed at about 483km from the arrival point established by the initial trajectory!"
      background = SKSpriteNode(imageNamed: "OutOfTrajectoryBackground")
      break
    case 4: //Death by collision with asteroid/satellite
      winOrLoseLabel.text = "GAME OVER!"
      textLabel.text = "This is bad.\n\nSince man began to explore the universe there have been accidents, fatal and not.\nMost problems occur at the exit and return of the Earth's atmosphere due to the very strong forces at stake.\n\nFortunately, research and technological progress have drastically reduced the frequency of accidents related to manned space flights on board, making them safer and consequently increasing their frequency."
      background = SKSpriteNode(imageNamed: "ExplosionBackground")
      break
    default:
      debugPrint("Error!")
      break 
    }
    
    background?.position = CGPoint(x: size.width/2, y: size.height/2)
    addChild(background!)
    
    addChild(winOrLoseLabel)
    addChild(textLabel)
    
    let wait = SKAction.wait(forDuration: 35.0)
    let block = SKAction.run {
      let myScene = GameScene(size: self.size)
      myScene.scaleMode = self.scaleMode
      let reveal = SKTransition.flipHorizontal(withDuration: 0.5)
      self.view?.presentScene(myScene, transition: reveal)
    }
    self.run(SKAction.sequence([wait, block]))
  }

  override public func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
    let myScene = GameScene(size: self.size)
    myScene.scaleMode = self.scaleMode
    let reveal = SKTransition.flipHorizontal(withDuration: 0.5)
    self.view?.presentScene(myScene, transition: reveal)
  }
}
